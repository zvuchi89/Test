В ветке работает Екатерина

## **Git удаленный** 

Есть некоторые операции с git remote, например **git remote -v,** которые вы можете использовать время от времени.

Но концепция удаленного доступа в Git важна и поддерживает многие другие операции.

## **Что делает удаленный Git?**

* git удаленный -v
* git remote

управляет набором удаленных устройств, которые вы отслеживаете в своем локальном репозитории.

### **Общие git remoteкоманды**
* git remote -v: список текущих пультов, связанных с локальным репозиторием.
* git remote add [name] [URL]: добавить удаленный
* git remote remove [name]: удалить пульт
## **Что такое origin?**
Если вы попытаетесь запустить git remote -vв своих репозиториях, вы, вероятно, увидите что-то под названием origin. Вы можете заметить originво многих сообщениях от Git. **origin** это удобное для человека имя для URL-адреса, по которому хранится удаленный репозиторий. Это похоже на пару ключ-значение и **origin** используется по умолчанию.

## **Что такое upstream?** 
Вам может понадобиться или вы захотите работать с несколькими пультами для одного локального репозитория. Это может быть обычным явлением в открытом исходном коде, когда участнику необходимо создать ответвление репозитория, чтобы иметь разрешение на отправку изменений на удаленный сервер.

В этом случае обычно создается и клонируется форк. Тогда удаленным по умолчанию будет origin, по отношению к форку. Чтобы упростить получение любых изменений для обновления локальной копии форка из исходного репозитория, многие люди также добавляют исходный репозиторий в качестве удаленного. Обычно этот пульт называют upstream.

Общение с удаленным
В Git есть четыре команды, которые вызывают связь с удаленным. Если вы не используете одну из этих четырех команд, вся ваша работа выполняется только локально.

1. git push
2. git clone
3. git pull
4. git fetch

Филиалы и удаленка
Концепция ветвей может сбивать с толку, если ее объединить с концепцией удаленных устройств. Git отслеживает ветки, над которыми вы работаете локально, а также каждую из веток на каждом удаленном сервере, связанном с вашим локальным репозиторием.

Филиалы удаленного отслеживания
Если вы запустите **git branch --all** в своем репозитории, вы заметите длинный список веток. Ветки, которые (по умолчанию) отображаются красным цветом, являются ветками удаленного отслеживания . Эти ветки являются только для чтения копиями веток на удаленном компьютере. Они обновляются каждый раз, когда вы запускаете **git fetchили git pull.**

Они не занимают много места, поэтому Git делает это по умолчанию. Но со временем они накапливаются — они не удаляются автоматически.

Чтобы удалить ветки удаленного отслеживания, которые удаляются на удаленном компьютере, запустите **git fetch --prune.** Это безопасно, если вы используете GitHub, потому что ветки, объединенные с помощью запросов на вытягивание, могут быть восстановлены.

Местные рабочие филиалы
При запуске **git branch --all** вы также увидите локальные рабочие ветки. Они могут быть связаны с удаленными ветвями или могут существовать без удаленного аналога.

** git clone [url]:** клонировать (загрузить) репозиторий, который уже существует на GitHub, включая все файлы, ветки и коммиты.

**git status:**  всегда хорошая идея, эта команда показывает, в какой ветке вы находитесь, какие файлы находятся в рабочем или промежуточном каталоге и любую другую важную информацию.

**git push:**  Загружает все коммиты локальной ветки на удаленную.

**git pull:** обновляет вашу текущую локальную рабочую ветку всеми новыми коммитами из соответствующей удаленной ветки на GitHub.
 **git pull** представляет собой комбинацию git fetchи git merge.  